{
  "$schema": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
  "contentVersion": "1.0.0.0",
  "parameters": {
    "templateBaseUrl": {
      "type": "string",
      "metadata": {
        "description": "Base uri of resources"
      }
    },
    "location": {
      "type": "string",
      "metadata": {
        "description": "Location where resources will be provisioned"
      }
    },
    "namespace": {
      "type": "string",
      "metadata": {
        "description": "The unique namespace for jumpbox nodes"
      }
    },
    "networkSettings": {
      "type": "object",
      "metadata": {
        "description": "Network settings"
      }
    },
    "storageAccountName": {
      "type": "string",
      "metadata": {
        "description": "Existing Storage Account where the Virtual Machine's disks will be placed"
      }
    },
    "credentials": {
      "type": "secureObject",
      "metadata": {
        "description": "Credential information block"
      }
    },
    "osSettings": {
      "type": "object",
      "metadata": {
        "description": "Elasticsearch deployment platform settings"
      }
    }
  },
  "variables": {
    "namespace": "[parameters('namespace')]",
    "vmSize": "Standard_DS4_v2",
    "subnetRef": "[concat(resourceId(parameters('networkSettings').resourceGroup, 'Microsoft.Network/virtualNetworks', parameters('networkSettings').name), '/subnets/', parameters('networkSettings').subnet.name)]",
    "publicIpName": "[concat(variables('namespace'), '-ip')]",
    "securityGroupName": "[concat(variables('namespace'), '-nsg')]",
    "storageAccountName": "[concat(variables('namespace'), uniqueString(resourceGroup().id, deployment().name))]",
    "nicName": "[concat(variables('namespace'), '-nic')]",
    "password_osProfile": {
      "computername": "[variables('namespace')]",
      "adminUsername": "[parameters('credentials').adminUsername]",
      "adminPassword": "[parameters('credentials').password]"
    },
    "sshPublicKey_osProfile": {
      "computername": "[variables('namespace')]",
      "adminUsername": "[parameters('credentials').adminUsername]",
      "linuxConfiguration": {
        "disablePasswordAuthentication": "true",
        "ssh": {
          "publicKeys": [ {
            "path": "[concat('/home/', parameters('credentials').adminUsername, '/.ssh/authorized_keys')]",
            "keyData": "[parameters('credentials').sshPublicKey]"
          } ]
        }
      }
    },
    "osProfile": "[variables(concat(parameters('credentials').authenticationType, '_osProfile'))]"
  },
  "resources": [
    {
      "apiVersion": "2016-03-30",
      "type": "Microsoft.Network/networkSecurityGroups",
      "name": "[variables('securityGroupName')]",
      "location": "[parameters('location')]",
      "properties": {
        "securityRules": [
          {
            "name": "SSH",
            "properties": {
              "description": "Allows SSH traffic",
              "protocol": "Tcp",
              "sourcePortRange": "*",
              "destinationPortRange": "[parameters('osSettings').managementPort]",
              "sourceAddressPrefix": "*",
              "destinationAddressPrefix": "*",
              "access": "Allow",
              "priority": 100,
              "direction": "Inbound"
            }
          }
        ]
      }
    },
    {
      "apiVersion": "2016-03-30",
      "type": "Microsoft.Network/publicIPAddresses",
      "name": "[variables('publicIpName')]",
      "location": "[parameters('location')]",
      "properties": {
        "publicIPAllocationMethod": "Dynamic",
        "dnsSettings": {
          "domainNameLabel": "[concat('jump-', uniqueString(resourceGroup().id))]"
        }
      }
    },
    {
      "apiVersion": "2016-03-30",
      "type": "Microsoft.Network/networkInterfaces",
      "name": "[variables('nicName')]",
      "location": "[parameters('location')]",
      "dependsOn": [
        "[concat('Microsoft.Network/publicIPAddresses/', variables('publicIpName'))]",
        "[concat('Microsoft.Network/networkSecurityGroups/', variables('securityGroupName'))]"
      ],
      "properties": {
        "ipConfigurations": [
          {
            "name": "ipconfig1",
            "properties": {
              "privateIPAllocationMethod": "Dynamic",
              "publicIPAddress": {
                "id": "[resourceId('Microsoft.Network/publicIPAddresses',variables('publicIpName'))]"
              },
              "subnet": {
                "id": "[variables('subnetRef')]"
              }
            }
          }
        ],
        "networkSecurityGroup": {
          "id": "[resourceId('Microsoft.Network/networkSecurityGroups', variables('securityGroupName'))]"
        }
      }
    },
    {
      "type": "Microsoft.Storage/storageAccounts",
      "name": "[variables('storageAccountName')]",
      "apiVersion": "2016-01-01",
      "location": "[parameters('location')]",
      "sku": {
        "name": "Premium_LRS"
      },
      "kind": "Storage",
      "properties": {}
    },
    {
      "apiVersion": "2016-03-30",
      "type": "Microsoft.Compute/virtualMachines",
      "name": "[concat(variables('namespace'), '-0')]",
      "location": "[parameters('location')]",
      "dependsOn": [
        "[concat('Microsoft.Network/networkInterfaces/', variables('nicName'))]",
        "[concat('Microsoft.Storage/storageAccounts/', variables('storageAccountName'))]"
      ],
      "properties": {
        "hardwareProfile": {
          "vmSize": "[variables('vmSize')]"
        },
        "osProfile": "[variables('osProfile')]",
        "storageProfile": {
          "imageReference": "[parameters('osSettings').imageReference]",
          "osDisk": {
            "name": "osdisk",
            "vhd": {
              "uri": "[concat('http://', variables('storageAccountName'),'.blob.core.windows.net/vhds/', concat(variables('namespace'), '-0'), '-osdisk.vhd')]"
            },
            "caching": "ReadWrite",
            "createOption": "FromImage"
          },
          "dataDisks": {
            "value": {
              "disks": [
              {
                  "name": "datadisk1",
                  "diskSizeGB": 1023,
                  "lun": 0,
                  "vhd": { "uri": "[concat('http://',variables('storageAccountName'), '.blob.core.windows.net/vhd/', variables('namespace'), '-data-disk1' ,'.vhd')]" },
                  "caching": "None",
                  "createOption": "Empty"
              },
              {
                  "name": "datadisk2",
                  "diskSizeGB": 1023,
                  "lun": 1,
                  "vhd": { "uri": "[concat('http://',variables('storageAccountName'), '.blob.core.windows.net/vhd/', variables('namespace'), '-data-disk2' ,'.vhd')]" },
                  "caching": "None",
                  "createOption": "Empty"
              },
              {
                  "name": "datadisk3",
                  "diskSizeGB": 1023,
                  "lun": 2,
                  "vhd": { "uri": "[concat('http://',variables('storageAccountName'), '.blob.core.windows.net/vhd/', variables('namespace'), '-data-disk3' ,'.vhd')]" },
                  "caching": "None",
                  "createOption": "Empty"
              },
              {
                  "name": "datadisk4",
                  "diskSizeGB": 1023,
                  "lun": 3,
                  "vhd": { "uri": "[concat('http://',variables('storageAccountName'), '.blob.core.windows.net/vhd/', variables('namespace'), '-data-disk4' ,'.vhd')]" },
                  "caching": "None",
                  "createOption": "Empty"
              },
              {
                  "name": "datadisk5",
                  "diskSizeGB": 1023,
                  "lun": 4,
                  "vhd": { "uri": "[concat('http://',variables('storageAccountName'), '.blob.core.windows.net/vhd/', variables('namespace'), '-data-disk5' ,'.vhd')]" },
                  "caching": "None",
                  "createOption": "Empty"
              },
              {
                  "name": "datadisk6",
                  "diskSizeGB": 1023,
                  "lun": 5,
                  "vhd": { "uri": "[concat('http://',variables('storageAccountName'), '.blob.core.windows.net/vhd/', variables('namespace'), '-data-disk6' ,'.vhd')]" },
                  "caching": "None",
                  "createOption": "Empty"
              },
              {
                  "name": "datadisk7",
                  "diskSizeGB": 1023,
                  "lun": 6,
                  "vhd": { "uri": "[concat('http://',variables('storageAccountName'), '.blob.core.windows.net/vhd/', variables('namespace'), '-data-disk7' ,'.vhd')]" },
                  "caching": "None",
                  "createOption": "Empty"
              },
              {
                  "name": "datadisk8",
                  "diskSizeGB": 1023,
                  "lun": 7,
                  "vhd": { "uri": "[concat('http://',variables('storageAccountName'), '.blob.core.windows.net/vhd/', variables('namespace'), '-data-disk8' ,'.vhd')]" },
                  "caching": "None",
                  "createOption": "Empty"
              },
              {
                  "name": "datadisk9",
                  "diskSizeGB": 1023,
                  "lun": 8,
                  "vhd": { "uri": "[concat('http://',variables('storageAccountName'), '.blob.core.windows.net/vhd/', variables('namespace'), '-data-disk9' ,'.vhd')]" },
                  "caching": "None",
                  "createOption": "Empty"
              },
              {
                  "name": "datadisk10",
                  "diskSizeGB": 1023,
                  "lun": 9,
                  "vhd": { "uri": "[concat('http://',variables('storageAccountName'), '.blob.core.windows.net/vhd/', variables('namespace'), '-data-disk10' ,'.vhd')]" },
                  "caching": "None",
                  "createOption": "Empty"
              },
              {
                  "name": "datadisk11",
                  "diskSizeGB": 1023,
                  "lun": 10,
                  "vhd": { "uri": "[concat('http://',variables('storageAccountName'), '.blob.core.windows.net/vhd/', variables('namespace'), '-data-disk11' ,'.vhd')]" },
                  "caching": "None",
                  "createOption": "Empty"
              },
              {
                  "name": "datadisk12",
                  "diskSizeGB": 1023,
                  "lun": 11,
                  "vhd": { "uri": "[concat('http://',variables('storageAccountName'), '.blob.core.windows.net/vhd/', variables('namespace'), '-data-disk12' ,'.vhd')]" },
                  "caching": "None",
                  "createOption": "Empty"
              },
              {
                  "name": "datadisk13",
                  "diskSizeGB": 1023,
                  "lun": 12,
                  "vhd": { "uri": "[concat('http://',variables('storageAccountName'), '.blob.core.windows.net/vhd/', variables('namespace'), '-data-disk13' ,'.vhd')]" },
                  "caching": "None",
                  "createOption": "Empty"
              },
              {
                  "name": "datadisk14",
                  "diskSizeGB": 1023,
                  "lun": 13,
                  "vhd": { "uri": "[concat('http://',variables('storageAccountName'), '.blob.core.windows.net/vhd/', variables('namespace'), '-data-disk14' ,'.vhd')]" },
                  "caching": "None",
                  "createOption": "Empty"
              },
              {
                  "name": "datadisk15",
                  "diskSizeGB": 1023,
                  "lun": 14,
                  "vhd": { "uri": "[concat('http://',variables('storageAccountName'), '.blob.core.windows.net/vhd/', variables('namespace'), '-data-disk15' ,'.vhd')]" },
                  "caching": "None",
                  "createOption": "Empty"
              },
              {
                  "name": "datadisk16",
                  "diskSizeGB": 1023,
                  "lun": 15,
                  "vhd": { "uri": "[concat('http://',variables('storageAccountName'), '.blob.core.windows.net/vhd/', variables('namespace'), '-data-disk16' ,'.vhd')]" },
                  "caching": "None",
                  "createOption": "Empty"
              }
            ]
          }
        },
        "networkProfile": {
          "networkInterfaces": [ { "id": "[resourceId('Microsoft.Network/networkInterfaces', variables('nicName'))]" } ]
        }
      }
    }
  }],
  "outputs": {
    "ssh": {
      "value": "[concat(parameters('credentials').adminUsername, '@',reference(resourceId('Microsoft.Network/publicIPAddresses',variables('publicIpName')),providers('Microsoft.Network', 'publicIPAddresses').apiVersions[0]).dnsSettings.fqdn)]",
      "type": "string"
    }
  }
}
