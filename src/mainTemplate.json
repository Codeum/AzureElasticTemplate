{
  "$schema": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
  "contentVersion": "1.0.0.0",
  "parameters": {
    "artifactsBaseUrl": {
      "type": "string",
      "defaultValue": "https://raw.githubusercontent.com/Codeum/AzureElasticTemplate/master/src",
      "metadata": {
        "artifactsBaseUrl": "Base URL of the Elastic template gallery package"
      }
    },
    "esVersion": {
      "type": "string",
      "defaultValue": "6.2.2",
      "allowedValues": [
        "6.2.1",
        "6.2.2"
      ],
      "metadata": {
        "description": "Elasticsearch version to install"
      }
    },
    "esEnableAnonymousAccess": {
      "type": "string",
      "allowedValues": [
        "Yes",
        "No"
      ],
      "defaultValue": "Yes",
      "metadata": {
        "description": "Enable Anonymous Access"
      }
    },
    "loadBalancerType": {
      "type": "string",
      "defaultValue": "none",
      "allowedValues": [
        "internal",
        "external",
        "none"
      ],
      "metadata": {
        "description": "Set up an internal or external load balancer, or use Application Gateway (gateway) for load balancing and SSL offload. If you are setting up Elasticsearch on a publicly available endpoint, it is *strongly recommended* to secure your nodes with a product like Elastic's X-Pack Security"
      }
    },
    "xpackPlugins": {
      "type": "string",
      "allowedValues": [
        "Yes",
        "No"
      ],
      "defaultValue": "Yes",
      "metadata": {
        "description": "Install the Commercial X-Pack Plugins - Monitoring, Security, Alerting, Graph* (Elasticsearch 2.3.0+), Machine Learning* (Elasticsearch 5.5.0+), and if installing Kibana, Reporting and Profiler"
      }
    },
    "esAdditionalPlugins": {
      "type": "string",
      "defaultValue": "",
      "metadata": {
        "description": "Additional Elasticsearch plugins to install.  Each plugin must be separated by a semicolon. e.g. analysis-icu;mapper-attachments"
      }
    },
    "esAdditionalYaml": {
      "type": "string",
      "defaultValue": "",
      "metadata": {
        "description": "Additional configuration for Elasticsearch yaml configuration file. Each line must be separated by a newline character e.g. action.auto_create_index: .security\nindices.queries.cache.size:5%"
      }
    },
    "esHeapSize": {
      "type": "int",
      "defaultValue": 0,
      "metadata": {
        "description": "The size, in megabytes, of memory to allocate on each Elasticsearch node for the JVM heap. If unspecified, 50% of the available memory will be allocated to Elasticsearch heap, up to a maximum of 31744MB (~32GB)."
      }
    },
    "kibana": {
      "type": "string",
      "defaultValue": "Yes",
      "allowedValues": [
        "Yes",
        "No"
      ],
      "metadata": {
        "description": "Provision a machine with Kibana on it"
      }
    },
    "vmSizeKibana": {
      "type": "string",
      "defaultValue": "Standard_B2S",
      "metadata": {
        "description": "Size of the Kibana node"
      }
    },
    "kibanaCertBlob": {
      "type": "string",
      "defaultValue": "",
      "metadata": {
        "description": "A Base-64 encoded form of the certificate (.crt) to secure HTTPS communications between the browser and Kibana."
      }
    },
    "kibanaKeyBlob": {
      "type": "securestring",
      "defaultValue": "",
      "metadata": {
        "description": "A Base-64 encoded form of the private key (.key) to secure HTTPS communications between the browser and Kibana."
      }
    },
    "kibanaKeyPassphrase": {
      "type": "securestring",
      "defaultValue": "",
      "metadata": {
        "description": "The passphrase to decrypt the private key. Optional as the key may not be encrypted. Supported only in 5.3.0+"
      }
    },
    "namespacePrefix": {
      "type": "string",
      "defaultValue": "es-",
      "metadata": {
        "description": "The prefix to use for hostnames when naming virtual machines in the cluster. Can be up to 5 characters in length, must begin with an alphanumeric character and can contain alphanumeric and hyphen characters. Hostnames are used for resolution of master nodes so if you are deploying a cluster into an existing virtual network containing an existing Elasticsearch cluster, be sure to set this to a unique prefix to differentiate the hostnames of this cluster from an existing cluster"
      }
    },
    "vmSizeDataNodes": {
      "type": "string",
      "defaultValue": "Standard_D2S_v3",
      "metadata": {
        "description": "Size of the Elasticsearch data nodes"
      }
    },
    "vmDataDiskCount": {
      "type": "int",
      "defaultValue": 1,
      "allowedValues": [
        0,
        1,
        2,
        4,
        8,
        16,
        32,
        40
      ],
      "metadata": {
        "description": "Number of disks to attach to each data node in RAID 0 setup. If the number of disks selected is more than can be attached to the data node VM size, the maximum number of disks that can be attached will be used. If 1 disk is selected, it is not RAIDed. If 0 disks are selected, the temporary disk will be used to store Elasticsearch data. IMPORTANT: The temporary disk is ephemeral in nature so be sure you know the trade-offs when choosing 0 disks."
      }
    },
    "vmDataDiskSize": {
      "type": "string",
      "defaultValue": "Large",
      "allowedValues": [
        "Small",
        "Medium",
        "Large"
      ],
      "metadata": {
        "description": "The disk size of each attached disk, Small (128Gb), Medium (512Gb) or Large (1024Gb). For Premium Storage, this equates to P10, P20 and P30, respectively."
      }
    },
    "vmDataNodeCount": {
      "type": "int",
      "defaultValue": 3,
      "minValue": 1,
      "metadata": {
        "description": "Number of Elasticsearch data nodes"
      }
    },
    "dataNodesAreMasterEligible": {
      "type": "string",
      "defaultValue": "No",
      "allowedValues": [
        "Yes",
        "No"
      ],
      "metadata": {
        "description": "Make all data nodes master-eligible. This can be useful for small elasticsearch cluster deployments, but for larger deployments it is recommended to use dedicated master nodes"
      }
    },
    "vmSizeMasterNodes": {
      "type": "string",
      "defaultValue": "Standard_D1",
      "metadata": {
        "description": "Size of the Elasticsearch master nodes, if data nodes are not master eligible, 3 master nodes of this size will be provisioned"
      }
    },
    "vmClientNodeCount": {
      "type": "int",
      "defaultValue": 0,
      "minValue": 0,
      "metadata": {
        "description": "Number of Elasticsearch client nodes to provision. A value of 0 puts the data nodes on the load balancer"
      }
    },
    "vmSizeClientNodes": {
      "type": "string",
      "defaultValue": "Standard_D1",
      "metadata": {
        "description": "Size of the Elasticsearch client nodes"
      }
    },
    "adminUsername": {
      "type": "string",
      "metadata": {
        "description": "Admin username used when provisioning virtual machines"
      }
    },
    "adminPassword": {
      "type": "securestring",
      "defaultValue": "",
      "metadata": {
        "description": "Admin password"
      }
    },
    "securityBootstrapPassword": {
      "type": "securestring",
      "metadata": {
        "description": "Password for the bootstrap.password to add to the keystore in 6.x. If no value is supplied, a 13 character password will be generated using the uniqueString() function"
      }
    },
    "securityAdminPassword": {
      "type": "securestring",
      "metadata": {
        "description": "Password for the superuser 'es_admin' in 2.x, or 'elastic' user in 5.x and up. Must be > 6 characters"
      }
    },
    "securityReadPassword": {
      "type": "securestring",
      "metadata": {
        "description": "Password for the 'es_read' user with user (read-only) role. Must be > 6 characters"
      }
    },
    "securityKibanaPassword": {
      "type": "securestring",
      "metadata": {
        "description": "Password for the 'es_kibana' user with kibana4_server role in 2.x, or 'kibana' user in 5.x and up. Must be > 6 characters"
      }
    },
    "securityLogstashPassword": {
      "type": "securestring",
      "metadata": {
        "description": "Password for the 'logstash_system' user in 5.2.0 and up. Must be > 6 characters"
      }
    },
    "location": {
      "type": "string",
      "defaultValue": "[resourceGroup().location]",
      "metadata": {
        "description": "Location where resources will be provisioned. By default, the template deploys the resources to the same location as the resource group. If specified, must be a valid Azure location e.g. 'australiasoutheast'"
      }
    },
    "vNetName": {
      "type": "string",
      "defaultValue": "es-vnet",
      "metadata": {
        "description": "Virtual Network Name"
      }
    },
    "vNetResourceGroup": {
      "type": "string",
      "defaultValue": "",
      "metadata": {
        "description": "The name of the resource group for the existing Virtual Network. Required when using an existing Virtual Network"
      }
    },
    "vNetLoadBalancerIp": {
      "type": "string",
      "defaultValue": "10.0.0.4",
      "metadata": {
        "description": "The static IP address for the internal load balancer. This must be an available IP address in the specified subnet"
      }
    },
    "vNetClusterSubnetName": {
      "type": "string",
      "defaultValue": "es",
      "metadata": {
        "description": "Subnet name to use for Elasticsearch nodes"
      }
    }
  },
  "variables": {
    "createCluster": "[not(equals(parameters('loadBalancerType'), 'none'))]",
    "templateBaseUrl": "[concat(parameters('artifactsBaseUrl'), '/')]",
    "osSettingsTemplateUrl": "[concat(variables('templateBaseUrl'), 'settings/ubuntuSettings.json')]",
    "location": "[parameters('location')]",
    "loadBalancerOptions": {
      "internal": "internal-lb-resources",
      "external": "external-lb-resources",
      "none": "internal-lb-resources"
    },
    "loadBalancerTemplateUrl": "[concat(variables('templateBaseUrl'), 'loadbalancers/', variables('loadBalancerOptions')[parameters('loadBalancerType')],'.json')]",
    "backendPoolConfigurations": {
      "internal": [
        {
          "id": "[concat(resourceId('Microsoft.Network/loadBalancers', concat(parameters('namespacePrefix'), 'int-lb')),'/backendAddressPools/LBBE')]"
        }
      ],
      "external": [
        {
          "id": "[concat(resourceId('Microsoft.Network/loadBalancers', concat(parameters('namespacePrefix'), 'int-lb')),'/backendAddressPools/LBBE')]"
        },
        {
          "id": "[concat(resourceId('Microsoft.Network/loadBalancers', concat(parameters('namespacePrefix'), 'ext-lb')),'/backendAddressPools/LBBE')]"
        }
      ],
      "none": []
    },
    "lbBackEndPools": {
      "backendPools": "[variables('backendPoolConfigurations')[parameters('loadBalancerType')]]"
    },
    "storageAccountType": "[variables('storageSettings').accountType]",
    "dataDiskSizes": {
      "Large": 1023,
      "Medium": 512,
      "Small": 128
    },
    "numberOfDataDisks": "[parameters('vmDataDiskCount')]",
    "esToKibanaMapping": {
      "6.2.1": "6.2.1",
      "6.2.2": "6.2.2"
    },
    "kibanaHttps": "[if(and(greater(length(parameters('kibanaKeyBlob')), 0), greater(length(parameters('kibanaCertBlob')), 0)), 'Yes', 'No')]",
    "esSettings": {
      "clusterName": "[concat(parameters('namespacePrefix'), 'cluster')]",
      "version": "[parameters('esVersion')]",
      "installPlugins": "[parameters('xpackPlugins')]",
      "installAdditionalPlugins": "[parameters('esAdditionalPlugins')]",
      "yamlConfiguration": "[parameters('esAdditionalYaml')]",
      "heapSize": "[parameters('esHeapSize')]",
      "securityAdminPwd": "[parameters('securityAdminPassword')]",
      "securityReadPwd": "[parameters('securityReadPassword')]",
      "securityKibanaPwd": "[parameters('securityKibanaPassword')]",
      "securityLogstashPwd": "[parameters('securityLogstashPassword')]",
      "securityBootstrapPwd": "[if(not(empty(parameters('securityBootstrapPassword'))),parameters('securityBootstrapPassword'),uniqueString(resourceGroup().id, deployment().name, parameters('securityAdminPassword')))]",
      "kibanaVersion": "[variables('esToKibanaMapping')[parameters('esVersion')]]"
    },
    "topologySettings": {
      "namespacePrefix": "[parameters('namespacePrefix')]",
      "dataNodesAreMasterEligible": "[parameters('dataNodesAreMasterEligible')]",
      "vmDataNodeCount": "[parameters('vmDataNodeCount')]",
      "vmSizeDataNodes": "[parameters('vmSizeDataNodes')]",
      "vmClientNodeCount": "[parameters('vmClientNodeCount')]",
      "vmSizeClientNodes": "[parameters('vmSizeClientNodes')]",
      "vNetLoadBalancerIp": "[parameters('vNetLoadBalancerIp')]",
      "vmSizeMasterNodes": "[parameters('vmSizeMasterNodes')]",
      "vmSizeKibana": "[parameters('vmSizeKibana')]",
      "kibana": "[parameters('kibana')]",
      "kibanaKeyBlob": "[parameters('kibanaKeyBlob')]",
      "kibanaKeyPassphrase": "[parameters('kibanaKeyPassphrase')]",
      "kibanaCertBlob": "[parameters('kibanaCertBlob')]",
      "kibanaHttps": "[variables('kibanaHttps')]",
      "dataNodeStorageSettings": {
        "accountType": "[variables('storageAccountType')]",
        "diskSize": "[variables('dataDiskSizes')[parameters('vmDataDiskSize')]]",
        "dataDisks": "[variables('numberOfDataDisks')]"
      },
      "dataLoadBalancerBackEndPools": "[variables('lbBackEndPools').backendPools]",
      "enableAnonymousAccess": "[parameters('esEnableAnonymousAccess')]"
    },
    "networkSettings": {
      "namespacePrefix": "[parameters('namespacePrefix')]",
      "name": "[parameters('vNetName')]",
      "resourceGroup": "[parameters('vNetResourceGroup')]",
      "location": "[variables('location')]",
      "subnet": {
        "name": "[parameters('vNetClusterSubnetName')]",
        "loadbalancerIp": "[parameters('vNetLoadBalancerIp')]"
      }
    },
    "commonVmSettings": {
      "createCluster": "[variables('createCluster')]",
      "namespacePrefix": "[parameters('namespacePrefix')]",
      "location": "[variables('location')]",
      "subnet": "[variables('networkSettings').subnet]",
      "subnetId": "[concat(resourceId(variables('networkSettings').resourceGroup, 'Microsoft.Network/virtualNetworks', variables('networkSettings').name), '/subnets/', variables('networkSettings').subnet.name)]",
      "credentials": {
        "adminUsername": "[parameters('adminUsername')]",
        "password": "[parameters('adminPassword')]"
      }
    }
  },
  "resources": [
    {
      "condition": "[variables('createCluster')]",
      "name": "loadbalancer",
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2017-05-10",
      "properties": {
        "mode": "Incremental",
        "templateLink": {
          "uri": "[variables('loadBalancerTemplateUrl')]",
          "contentVersion": "1.0.0.0"
        },
        "parameters": {
          "networkSettings": {
            "value": "[variables('networkSettings')]"
          }
        }
      }
    },
    {
      "condition": "[not(variables('createCluster'))]",
      "apiVersion": "2017-10-01",
      "type": "Microsoft.Network/networkInterfaces",
      "name": "[concat(parameters('namespacePrefix'), 'data-vm1-nic')]",
      "location": "[variables('commonVmSettings').location]",
      "properties": {
        "ipConfigurations": [
          {
            "name": "ipconfig1",
            "properties": {
              "PrivateIpAddress": "[variables('topologySettings').vNetLoadBalancerIp]",
              "privateIPAllocationMethod": "Static",
              "subnet": {
                "id": "[variables('commonVmSettings').subnetId]"
              },
              "primary": true,
              "privateIPAddressVersion": "IPv4",
              "loadBalancerBackendAddressPools": "[variables('topologySettings').dataLoadBalancerBackEndPools]"
            }
          }
        ]
      }
    },
    {
      "name": "virtual-machines",
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2017-05-10",
      "dependsOn": [
        "[concat('Microsoft.Resources/deployments/', 'loadbalancer')]",
        "[concat('Microsoft.Network/networkInterfaces/', parameters('namespacePrefix'), 'data-vm1-nic')]"
      ],
      "properties": {
        "mode": "Incremental",
        "templateLink": {
          "uri": "[variables('osSettingsTemplateUrl')]",
          "contentVersion": "1.0.0.0"
        },
        "parameters": {
          "templateBaseUrl": {
            "value": "[variables('templateBaseUrl')]"
          },
          "esSettings": {
            "value": "[variables('esSettings')]"
          },
          "commonVmSettings": {
            "value": "[variables('commonVmSettings')]"
          },
          "topologySettings": {
            "value": "[variables('topologySettings')]"
          },
          "networkSettings": {
            "value": "[variables('networkSettings')]"
          }
        }
      }
    }
  ]
}
